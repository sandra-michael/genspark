
services:
  # Service Discovery
  consul.diwakar:
    container_name: consul-service
    image: hashicorp/consul:1.20
    ports:
      - "8500:8500" # Consul UI
    networks:
      - web
    restart: always

  # Gateway Service Containers
#########################################
  gateway-service.diwakar:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - "80:80"
    depends_on:
      - consul.diwakar
    networks:
      - web


#######################################

# User-Service containers
#######################################

  user-service.diwakar:
    build: ./user-service
    container_name: user-service
    depends_on:
      - consul.diwakar
    networks:
      - web

  user-postgres.diwakar:
    image: postgres:16.3-alpine
    container_name: user-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes: #setting the data directory in the project
      - ./project-db/user-postgres/postgres/:/var/lib/postgresql/data/
    networks:
      - web

  kafka-user-service.diwakar:
    image: apache/kafka:3.9.0
    container_name: kafka-user-service
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-user-service.diwakar:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
    networks:
      - web

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka-user-service.diwakar
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-user-service.diwakar:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - web

#######################################

# Product-Service containers
#######################################

  product-service.diwakar:
    build: ./product-service
    container_name: product-service
    ports:
      - "8083:8083"
    depends_on:
      - consul.diwakar
    networks:
      - web

  product-postgres.diwakar:
    image: postgres:16.3-alpine
    container_name: product-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5434:5432"
    volumes: #setting the data directory in the project
      - ./project-db/product-postgres/postgres/:/var/lib/postgresql/data/
    networks:
      - web

#######################################
# DB-UI containers
####################################### 
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
     - web

#Containers connected to the same bridge network can communicate with each other
networks:
  web:
    driver: bridge